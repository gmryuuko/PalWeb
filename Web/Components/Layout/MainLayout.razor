@using Microsoft.Extensions.Options
@using Web.Configurations
@using Web.Services

@inherits LayoutComponentBase
@implements IDisposable

@inject PalService PalService
@inject ClipboardService ClipboardService
@inject IOptions<PalServiceOptions> PalServiceOptions

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode"/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                       OnClick="@((e) => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3">Pal World GM</MudText>
        <MudSpacer/>
        <MudIconButton Icon="@Icons.Material.Filled.RestartAlt" Color="Color.Error" OnClick="@OpenRestartDialog"/>
        <MudIconButton Icon="@Icons.Material.Filled.AdminPanelSettings" Color="Color.Inherit"
                       OnClick="@CopyAdminCommand"/>
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle"/>
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>

    <MudOverlay @bind-Visible="_restartOverlay" DarkBackground>
        <MudPaper Class="pa-8" MinWidth="500">
            <MudText Typo="Typo.h4">Restart Pal World Server</MudText>
            <MudDivider Class="mt-4 mb-4"/>
            <MudButton Disabled="PalService.IsRestarting" OnClick="@RestartServer" Color="Color.Error"
                       Variant="Variant.Filled" Class="ma-2">
                Restart
            </MudButton>
            <MudButton OnClick="() => { _restartOverlay = false; }" Variant="Variant.Filled" Class="ma-2">
                Close
            </MudButton>
            <MudDivider Class="mt-4 mb-4"/>
            <MudTextField T="string" Label="Output" Variant="Variant.Outlined"
                          Value="@PalService.RestartLog"
                          ReadOnly="true"
                          Lines="20"/>
        </MudPaper>
    </MudOverlay>

    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    private bool _restartOverlay = false;

    private Action? _onChangeHandler;

    protected override void OnInitialized()
    {
        _onChangeHandler = async void () =>
        {
            try
            {
                await InvokeAsync(StateHasChanged);
            }
            catch (Exception e)
            {
                // do nothing
            }
        };
        PalService.OnChangeServerInfo += _onChangeHandler;

        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }


    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private async Task CopyAdminCommand()
    {
        await ClipboardService.CopyToClipboardAsync($"/AdminPassword {PalServiceOptions.Value.Password}");
    }

    private void OpenRestartDialog()
    {
        _restartOverlay = !_restartOverlay;
    }

    private void RestartServer()
    {
        Task.Run(async () => { await PalService.RestartServer(); });
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.LightMode,
        false => Icons.Material.Outlined.DarkMode,
    };

    public void Dispose()
    {
        if (_onChangeHandler != null)
        {
            PalService.OnChangeServerInfo -= _onChangeHandler;
        }
    }

}


