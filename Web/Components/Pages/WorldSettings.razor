@page "/settings"
@using Web.Services
@inject PalService PalService
@inject ISnackbar Snackbar

<PageTitle>World Settings</PageTitle>
<MudContainer MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h3" GutterBottom="true">World Settings</MudText>
    @if (_settings == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
    }
    else
    {
        <MudPaper Class="pa-4">
            <MudForm Model="@_settings" @ref="_form" ValidationDelay="0">
                <MudTextField @bind-Value="_settings.ServerName"
                              For="() => _settings.ServerName"
                              Immediate="true"
                              Label="Server Name"/>
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false">
                Save
            </MudButton>
        </MudPaper>
    }
</MudContainer>

@code {
    private PalWorldSettings? _activeSettings;
    private PalWorldSettings? _settings;
    private MudForm _form;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _activeSettings = await PalService.GetActivePalWorldSettingsAsync();
            _settings = await PalService.GetPalWorldSettingsAsync();
        }
        catch (Exception e)
        {
            Snackbar.Add(e.Message, Severity.Error);
        }
    }

    private async Task EditSettings()
    {
        Snackbar.Add("Not Implemented", Severity.Error);
    }

    private async Task SaveSettings()
    {
        Snackbar.Add("Not Implemented", Severity.Error);
    }

}