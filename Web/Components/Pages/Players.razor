@page "/players"
@using Web.Services

@inject PalService PalService
@inject ISnackbar Snackbar

<PageTitle>Players</PageTitle>

<MudContainer>
    <MudText Typo="Typo.h3" GutterBottom="true">Players</MudText>
    <MudTable Items="_rows" Hover="true" SortLabel="Sort By">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PlayerRow, object>(x => x.Info.Name)">Name</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PlayerRow, object>(x => x.Info.AccountName)">AccountName
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PlayerRow, object>(x => x.Info.PlayerId)">PlayerId
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PlayerRow, object>(x => x.Info.UserId)">UserId</MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<PlayerRow, object>(x => x.Info.Level)">Level</MudTableSortLabel>
            </MudTh>
            <MudTh></MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Info.Name</MudTd>
            <MudTd>@context.Info.AccountName</MudTd>
            <MudTd>@context.Info.PlayerId</MudTd>
            <MudTd>@context.Info.UserId</MudTd>
            <MudTd>@context.Info.Level</MudTd>
            <MudTd>
                <MudButton Size="Size.Small" Color="Color.Primary" Variant="Variant.Filled">
                    TP
                </MudButton>
            </MudTd>
            <MudTd>
                <MudMenu Icon="@Icons.Material.Filled.MoreVert" Color="Color.Error">
                    <MudMenuItem OnClick="async () => { await KickPlayer(context); }">Kick</MudMenuItem>
                    <MudMenuItem OnClick="async () => { await BanPlayer(context); }">Ban</MudMenuItem>
                </MudMenu>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudContainer>

@code {

    private class PlayerRow
    {
        public PlayerInfo Info { get; set; } = null!;
    }

    private List<PlayerRow> _rows = [];

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var players = await PalService.GetPlayersAsync();
            _rows = players.Select(x => new PlayerRow { Info = x }).ToList();
        }
        catch (Exception e)
        {
            Snackbar.Add(e.Message, Severity.Error);
        }
    }

    private async Task KickPlayer(PlayerRow context)
    {
        try
        {
            await PalService.KickPlayerAsync(context.Info.UserId);
            Snackbar.Add("Player kicked", Severity.Success);
            _rows.Remove(context);
        }
        catch (Exception e)
        {
            Snackbar.Add(e.Message, Severity.Error);
        }
    }

    private async Task BanPlayer(PlayerRow context)
    {
        try
        {
            await PalService.BanPlayerAsync(context.Info.UserId);
            Snackbar.Add("Player kicked", Severity.Success);
            _rows.Remove(context);
        }
        catch (Exception e)
        {
            Snackbar.Add(e.Message, Severity.Error);
        }
    }

    private async Task KillPlayer(PlayerRow context)
    {
        try
        {
            await PalService.KillPlayerAsync(context.Info.UserId);
            Snackbar.Add("Player kicked", Severity.Success);
            _rows.Remove(context);
        }
        catch (Exception e)
        {
            Snackbar.Add(e.Message, Severity.Error);
        }
    }

}